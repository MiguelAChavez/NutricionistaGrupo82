/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.Comida;

import AccesoADatos.ComidaData;
import Entidades.Comida;
import javax.swing.JOptionPane;
import utils.Estado;
import utils.Validacion;

/**
 *
 * @author RAMON
 */
public class FormularioComidaView extends javax.swing.JPanel {

    private Comida micomida;

    public FormularioComidaView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new utils.PanelRound();
        jSNombre2 = new javax.swing.JSeparator();
        jSNombre = new javax.swing.JSeparator();
        jTFNombreComida = new javax.swing.JTextField();
        jTFCaloria = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jBEditar = new javax.swing.JButton();
        jBCrear = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBBuscarC = new javax.swing.JButton();
        jBCancelarC = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(35, 35, 35));

        panelRound1.setBackground(new java.awt.Color(51, 51, 51));
        panelRound1.setRoundBottomLeft(50);
        panelRound1.setRoundBottomRight(50);
        panelRound1.setRoundTopLeft(50);
        panelRound1.setRoundTopRight(50);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSNombre2.setForeground(new java.awt.Color(255, 255, 255));
        jSNombre2.setToolTipText("");
        jSNombre2.setOpaque(true);
        jSNombre2.setPreferredSize(new java.awt.Dimension(50, 2));
        panelRound1.add(jSNombre2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 167, 148, 3));

        jSNombre.setForeground(new java.awt.Color(255, 255, 255));
        jSNombre.setToolTipText("");
        jSNombre.setOpaque(true);
        jSNombre.setPreferredSize(new java.awt.Dimension(50, 2));
        panelRound1.add(jSNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 89, 229, 3));

        jTFNombreComida.setBackground(new java.awt.Color(35, 35, 35));
        jTFNombreComida.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jTFNombreComida.setForeground(new java.awt.Color(204, 204, 204));
        jTFNombreComida.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        jTFNombreComida.setCaretColor(new java.awt.Color(51, 153, 255));
        jTFNombreComida.setSelectionColor(new java.awt.Color(102, 102, 102));
        jTFNombreComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFNombreComidaActionPerformed(evt);
            }
        });
        jTFNombreComida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFNombreComidaKeyTyped(evt);
            }
        });
        panelRound1.add(jTFNombreComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 53, 229, 40));

        jTFCaloria.setBackground(new java.awt.Color(35, 35, 35));
        jTFCaloria.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jTFCaloria.setForeground(new java.awt.Color(204, 204, 204));
        jTFCaloria.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        jTFCaloria.setCaretColor(new java.awt.Color(51, 153, 255));
        jTFCaloria.setSelectionColor(new java.awt.Color(102, 102, 102));
        jTFCaloria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCaloriaActionPerformed(evt);
            }
        });
        panelRound1.add(jTFCaloria, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 148, 40));

        jTextArea1.setBackground(new java.awt.Color(35, 35, 35));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        panelRound1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 440, 140));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre");
        panelRound1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 79, 40));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Calorias");
        panelRound1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 79, 40));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Detalle");
        panelRound1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 70, 34));

        jBEditar.setBackground(new java.awt.Color(0, 204, 255));
        jBEditar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jBEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton-editar.png"))); // NOI18N
        jBEditar.setText("Editar");
        jBEditar.setBorder(null);
        jBEditar.setBorderPainted(false);
        jBEditar.setContentAreaFilled(false);
        jBEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBEditar.setDisabledIcon(null);
        jBEditar.setEnabled(false);
        jBEditar.setOpaque(true);
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });
        panelRound1.add(jBEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 440, 80, 40));

        jBCrear.setBackground(new java.awt.Color(48, 255, 167));
        jBCrear.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jBCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar-el-archivo.png"))); // NOI18N
        jBCrear.setText("Crear");
        jBCrear.setBorder(null);
        jBCrear.setBorderPainted(false);
        jBCrear.setContentAreaFilled(false);
        jBCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCrear.setDisabledIcon(null);
        jBCrear.setOpaque(true);
        jBCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCrearActionPerformed(evt);
            }
        });
        panelRound1.add(jBCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 440, 80, 40));

        jBEliminar.setBackground(new java.awt.Color(247, 87, 87));
        jBEliminar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jBEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png"))); // NOI18N
        jBEliminar.setText("Eliminar");
        jBEliminar.setBorder(null);
        jBEliminar.setBorderPainted(false);
        jBEliminar.setContentAreaFilled(false);
        jBEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBEliminar.setDisabledIcon(null);
        jBEliminar.setEnabled(false);
        jBEliminar.setOpaque(true);
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });
        panelRound1.add(jBEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 440, 90, 40));

        jBBuscarC.setBackground(new java.awt.Color(51, 153, 255));
        jBBuscarC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        jBBuscarC.setToolTipText("");
        jBBuscarC.setBorder(null);
        jBBuscarC.setBorderPainted(false);
        jBBuscarC.setContentAreaFilled(false);
        jBBuscarC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBBuscarC.setOpaque(true);
        jBBuscarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarCActionPerformed(evt);
            }
        });
        panelRound1.add(jBBuscarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 53, 80, 40));

        jBCancelarC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancelar.png"))); // NOI18N
        jBCancelarC.setToolTipText("");
        jBCancelarC.setBorder(null);
        jBCancelarC.setBorderPainted(false);
        jBCancelarC.setContentAreaFilled(false);
        jBCancelarC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCancelarC.setEnabled(false);
        jBCancelarC.setOpaque(true);
        jBCancelarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarCActionPerformed(evt);
            }
        });
        panelRound1.add(jBCancelarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 53, 40, 40));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("   Formulario Comida");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(308, 308, 308)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(376, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(301, 301, 301))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed
        Comida comidaAeditar = new Comida();
        comidaAeditar = crearComida(comidaAeditar);
        if (comidaAeditar != null) {
            comidaAeditar.setIdComida(this.micomida.getIdComida());
            this.micomida = comidaAeditar;
            ComidaData.modificarComida(micomida);
        }
    }//GEN-LAST:event_jBEditarActionPerformed

    private void jBCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCrearActionPerformed
        Comida comida = this.crearComida(new Comida());
        if (comida != null) {
            ComidaData.crearComida(comida);
            limpiarCampos();
        }
    }//GEN-LAST:event_jBCrearActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        //enviamos un mensaje al usuario para que confirme la eliminacion.
        int respuesta = JOptionPane.showConfirmDialog(null, "¿está seguro que desea eliminar la comida? ");

        //Comparamos la respueta con la constante YES_OPTION
        if (respuesta == JOptionPane.YES_OPTION) {
            //Enviamos micomida a ComidaData para que la elimine
            ComidaData.eliminarComida(this.micomida.getIdComida());
            limpiarCampos();
            invertirEstados();
        }

    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jTFCaloriaKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTFCaloriaKeyTyped
        char caracter = evt.getKeyChar();
        if ((caracter < '0' || caracter > '9') && caracter != '.') {
            evt.consume();
        }

    }

    private void jBCrearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBCrearMouseClicked

    }//GEN-LAST:event_jBCrearMouseClicked

    private void jBBuscarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarCActionPerformed
        //Llamamos a buscarComida y guardamos el resultado en el atributo micomida
        this.micomida = buscarComida();
        //verificamos que micomida no sea nulo y cargamos sus atributos en los campos
        if (micomida != null) {
            cargarCampos(micomida);
        }


    }//GEN-LAST:event_jBBuscarCActionPerformed

    private void jBCancelarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarCActionPerformed
        //Llamamos al metodo limpiarCampos 
        limpiarCampos();
        //Llamamos invertirEstados para regresar al modo de crear una comida
        invertirEstados();
        //igualamos a nulo el atributo micomida
        this.micomida = null;

    }//GEN-LAST:event_jBCancelarCActionPerformed

    private void jTFNombreComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFNombreComidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFNombreComidaActionPerformed

    private void jTFCaloriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCaloriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCaloriaActionPerformed

    private void jTFNombreComidaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNombreComidaKeyTyped
        char caracter  = evt.getKeyChar();
        if((caracter < 'a' || caracter > 'z') && (caracter < 'A' || caracter > 'Z') && caracter !=' '){
            evt.consume();
        }
    }//GEN-LAST:event_jTFNombreComidaKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBuscarC;
    private javax.swing.JButton jBCancelarC;
    private javax.swing.JButton jBCrear;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSNombre;
    private javax.swing.JSeparator jSNombre2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFCaloria;
    private javax.swing.JTextField jTFNombreComida;
    private javax.swing.JTextArea jTextArea1;
    private utils.PanelRound panelRound1;
    // End of variables declaration//GEN-END:variables

    private Comida crearComida(Comida comida) {
        try {
            int calorias = Integer.parseInt(jTFCaloria.getText());
            if (calorias < 0) {
                JOptionPane.showMessageDialog(this, "Ingrese números mayores a cero");
                return null;
            }

            String nombre = this.jTFNombreComida.getText();

            String detalle = this.jTextArea1.getText();

            if (nombre.isEmpty() || detalle.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No puede haber campos de texto vacios.");
                return null;
            } else if (!Validacion.isValidoString(nombre) || !Validacion.isValidoString(detalle)) {
                JOptionPane.showMessageDialog(this, "Alguno de los campos de texto contiene caracteres inválidos.");
                return null;
            }

            return new Comida(nombre.trim(), detalle.trim(), calorias, Boolean.TRUE);

        } catch (NumberFormatException e) {

            if (e.getMessage().contains(this.jTFNombreComida.getText())) {

                JOptionPane.showMessageDialog(this, "Error en campo del Nombre");
            } else if (e.getMessage().contains(this.jTFCaloria.getText())) {

                JOptionPane.showMessageDialog(this, "Error en campo de Caloria");
            } else if (e.getMessage().contains(this.jTextArea1.getText())) {

                JOptionPane.showMessageDialog(this, "Error en campo del detalle");
            }

        }
        return null;

    }

    private void limpiarCampos() {
        this.jTFNombreComida.setText("");
        this.jTFCaloria.setText("");
        this.jTextArea1.setText("");

    }

    private void invertirEstados() {
        this.jBCrear.setEnabled(!jBCrear.isEnabled());
        this.jBEditar.setEnabled(!jBEditar.isEnabled());
        this.jBEliminar.setEnabled(!jBEliminar.isEnabled());
        this.jBBuscarC.setEnabled(!jBBuscarC.isEnabled());
        this.jBCancelarC.setEnabled(!jBCancelarC.isEnabled());

    }

    private Comida buscarComida() {
        String nombre = this.jTFNombreComida.getText();
        
        if (nombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, " Complete el campo nombre para realizar la busqueda ");
            return null;
        }

        Comida comida = ComidaData.buscarComidaPorNombre(nombre, Estado.TODOS);
        if (comida == null) {
            return null;
        }
        if (!comida.isEstado()) {
            int result = JOptionPane.showConfirmDialog(this, "La comida se encuentra dada de baja. ¿Quiere darla de alta?");
            switch (result) {
                case JOptionPane.YES_OPTION:
                    ComidaData.activar(comida);
                    break;
                case JOptionPane.NO_OPTION:
                    comida = ComidaData.buscarComidaPorNombre(nombre, Estado.INACTIVOS);
                    break;
                default:
                    return null;
            }
        }
        return comida;
    }

    private void cargarCampos(Comida comida) {
        //seteamos los atributos del paciente al los campos
        invertirEstados();
        this.jTFNombreComida.setText(comida.getNombre());
        this.jTFCaloria.setText(comida.getCantCalorias() + "");
        this.jTextArea1.setText(comida.getDatalle());

    }

}
