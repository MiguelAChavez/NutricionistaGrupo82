/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.Comida;

import AccesoADatos.ComidaData;
import Entidades.Comida;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.DefaultTableCellRenderer;
import utils.CargarComponente;
import utils.Estado;

/**
 *
 * @author alber
 */
public class ListarComidaView extends javax.swing.JPanel {

    /**
     * Creates new form ListarComidaView
     */
    private final DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int i, int i1) {
            switch (i1) {
                case 1:
                    if (i > 0) {
                        return Boolean.TRUE;
                    } else {
                        return Boolean.FALSE;
                    }
                default:
                    return Boolean.FALSE;
            }
        }
    };

    public ListarComidaView() {
        initComponents();
        initTableComida();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JTableComida = new javax.swing.JTable();
        JLtituloComida = new javax.swing.JLabel();
        jTextFieldComidaList = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jBBuscarComida = new javax.swing.JButton();
        jBCancelarComida = new javax.swing.JButton();

        setBackground(new java.awt.Color(35, 35, 35));
        setPreferredSize(new java.awt.Dimension(1100, 670));

        JTableComida.setBackground(new java.awt.Color(51, 51, 51));
        JTableComida.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        JTableComida.setForeground(new java.awt.Color(255, 255, 255));
        JTableComida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(JTableComida);

        JLtituloComida.setFont(new java.awt.Font("Dialog", 1, 39)); // NOI18N
        JLtituloComida.setForeground(new java.awt.Color(255, 255, 255));
        JLtituloComida.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLtituloComida.setText("Lista de Comidas");
        JLtituloComida.setMaximumSize(new java.awt.Dimension(352, 50));
        JLtituloComida.setMinimumSize(new java.awt.Dimension(352, 50));
        JLtituloComida.setPreferredSize(new java.awt.Dimension(352, 50));

        jTextFieldComidaList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldComidaListActionPerformed(evt);
            }
        });
        jTextFieldComidaList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldComidaListKeyTyped(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Escriba la cantidad de calorias :");

        jBBuscarComida.setBackground(new java.awt.Color(51, 153, 255));
        jBBuscarComida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        jBBuscarComida.setToolTipText("");
        jBBuscarComida.setBorder(null);
        jBBuscarComida.setBorderPainted(false);
        jBBuscarComida.setContentAreaFilled(false);
        jBBuscarComida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBBuscarComida.setOpaque(true);
        jBBuscarComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarComidaActionPerformed(evt);
            }
        });

        jBCancelarComida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancelar.png"))); // NOI18N
        jBCancelarComida.setToolTipText("");
        jBCancelarComida.setBorder(null);
        jBCancelarComida.setBorderPainted(false);
        jBCancelarComida.setContentAreaFilled(false);
        jBCancelarComida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCancelarComida.setOpaque(true);
        jBCancelarComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarComidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JLtituloComida, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldComidaList, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jBBuscarComida, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBCancelarComida, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(129, 129, 129))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(JLtituloComida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldComidaList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBCancelarComida, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBBuscarComida, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldComidaListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldComidaListActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextFieldComidaListActionPerformed

    private void jBBuscarComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarComidaActionPerformed
        try {
            int num;
            num = Integer.parseInt(jTextFieldComidaList.getText());
            List<Comida> listacomidas;
            listacomidas = ComidaData.buscarComidaPorCalorias(num, Estado.TODOS);
            if (listacomidas.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se ha encontrado ninguna comida menor: " + num);
                return;
            }
            cargarTabla(listacomidas);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un número válido de calorías.");
        }
    }//GEN-LAST:event_jBBuscarComidaActionPerformed

    private void jBCancelarComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarComidaActionPerformed
        //Llamamos al metodo limpiarCampos

    }//GEN-LAST:event_jBCancelarComidaActionPerformed

    private void jTextFieldComidaListKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldComidaListKeyTyped
        char caracter;
        caracter = evt.getKeyChar();
        if ((caracter < '0' || caracter > '9')) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldComidaListKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLtituloComida;
    private javax.swing.JTable JTableComida;
    private javax.swing.JButton jBBuscarComida;
    private javax.swing.JButton jBCancelarComida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldComidaList;
    // End of variables declaration//GEN-END:variables

    private void initTableComida() {
        this.model.addColumn("Codigo");
        this.model.addColumn("Nombre");
        this.model.addColumn("Calorias");
        this.model.addColumn("Estado");

        this.JTableComida.setModel(model);
        JTableHeader tableHeader = JTableComida.getTableHeader();
        tableHeader.setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setPreferredSize(new Dimension(c.getWidth(), 40));
                c.setBackground(Color.GRAY); 
                c.setForeground(Color.WHITE);
                return c;
            }
        });

    }

    private void cargarTabla(List<Comida> listaUsar) {
        CargarComponente.borrarFilas(JTableComida, model);
        listaUsar.forEach((comida) -> {
            model.addRow(new Object[]{comida.getIdComida(), comida.getNombre(), comida.getCantCalorias(), (comida.isEstado()) ? "Activo" : "Inactivo"});
        });
    }

}
