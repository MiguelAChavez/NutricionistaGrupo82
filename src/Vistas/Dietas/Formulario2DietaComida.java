/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.Dietas;

import AccesoADatos.ComidaData;
import AccesoADatos.DietaComidaData;
import AccesoADatos.DietaData;
import Entidades.Comida;
import Entidades.Dieta;
import Entidades.DietaComida;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import utils.CargarComponente;
import utils.Estado;
import utils.Horario;

/**
 *
 * @author Lenovo
 */
public final class Formulario2DietaComida extends javax.swing.JPanel {

    /**
     * Creates new form Formulario2DietaComida
     */
    private final DefaultTableModel tablita = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int i, int i1) {
            switch (i1) {
                case 2 | 3:
                    return Boolean.TRUE;
                default:
                    return Boolean.FALSE;
            }
        }
    };
    private final Dieta dieta;

    public Formulario2DietaComida(Dieta dietaS) {
        initComponents();
        initTable();
        if (dietaS == null) {
            iniciarComboDietas();
            this.dieta = null;
        } else {
            this.dieta = dietaS;
            this.jComboBoxDietaComida.setEnabled(Boolean.FALSE);
            cargarTabla(DietaComidaData.buscarDietaComidaPorIdDieta(this.dieta.getIdDieta()));
        }
        iniciarComboComida();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLTDietaComida = new javax.swing.JLabel();
        jComboBoxDietaComida = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDietaComida = new javax.swing.JTable();
        jCBComidas = new javax.swing.JComboBox<>();
        jBCrearDietaComida = new javax.swing.JButton();
        jBEliminarDietaComida = new javax.swing.JButton();
        jBAgregarComida = new javax.swing.JButton();

        setBackground(new java.awt.Color(35, 35, 35));
        setPreferredSize(new java.awt.Dimension(1100, 670));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLTDietaComida.setBackground(new java.awt.Color(51, 51, 51));
        jLTDietaComida.setFont(new java.awt.Font("Dialog", 1, 39)); // NOI18N
        jLTDietaComida.setForeground(new java.awt.Color(255, 255, 255));
        jLTDietaComida.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLTDietaComida.setText("Formulario dieta-comida");
        add(jLTDietaComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1080, -1));

        jComboBoxDietaComida.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jComboBoxDietaComida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar la dieta" }));
        jComboBoxDietaComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDietaComidaActionPerformed(evt);
            }
        });
        add(jComboBoxDietaComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 449, 28));

        jTableDietaComida.setBackground(new java.awt.Color(51, 51, 51));
        jTableDietaComida.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jTableDietaComida.setForeground(new java.awt.Color(255, 255, 255));
        jTableDietaComida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Comida", "PorciÃ³n", "Horario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDietaComida.setGridColor(new java.awt.Color(0, 0, 0));
        jTableDietaComida.setRowHeight(40);
        jTableDietaComida.setSelectionBackground(new java.awt.Color(30, 150, 117));
        jTableDietaComida.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableDietaComida);
        if (jTableDietaComida.getColumnModel().getColumnCount() > 0) {
            jTableDietaComida.getColumnModel().getColumn(0).setResizable(false);
            jTableDietaComida.getColumnModel().getColumn(1).setResizable(false);
            jTableDietaComida.getColumnModel().getColumn(2).setResizable(false);
            jTableDietaComida.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 700, 380));

        jCBComidas.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jCBComidas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar comidas" }));
        jCBComidas.setEnabled(false);
        add(jCBComidas, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 398, 30));

        jBCrearDietaComida.setBackground(new java.awt.Color(48, 255, 167));
        jBCrearDietaComida.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jBCrearDietaComida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar-el-archivo.png"))); // NOI18N
        jBCrearDietaComida.setText("Guardar");
        jBCrearDietaComida.setBorder(null);
        jBCrearDietaComida.setBorderPainted(false);
        jBCrearDietaComida.setContentAreaFilled(false);
        jBCrearDietaComida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCrearDietaComida.setDisabledIcon(null);
        jBCrearDietaComida.setOpaque(true);
        jBCrearDietaComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCrearDietaComidaActionPerformed(evt);
            }
        });
        add(jBCrearDietaComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 600, 80, 40));

        jBEliminarDietaComida.setBackground(new java.awt.Color(247, 87, 87));
        jBEliminarDietaComida.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jBEliminarDietaComida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png"))); // NOI18N
        jBEliminarDietaComida.setText("Eliminar");
        jBEliminarDietaComida.setBorder(null);
        jBEliminarDietaComida.setBorderPainted(false);
        jBEliminarDietaComida.setContentAreaFilled(false);
        jBEliminarDietaComida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBEliminarDietaComida.setDisabledIcon(null);
        jBEliminarDietaComida.setEnabled(false);
        jBEliminarDietaComida.setOpaque(true);
        jBEliminarDietaComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarDietaComidaActionPerformed(evt);
            }
        });
        add(jBEliminarDietaComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 600, 90, 40));

        jBAgregarComida.setBackground(new java.awt.Color(132, 181, 90));
        jBAgregarComida.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jBAgregarComida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton-agregar.png"))); // NOI18N
        jBAgregarComida.setText("Agregar");
        jBAgregarComida.setBorder(null);
        jBAgregarComida.setBorderPainted(false);
        jBAgregarComida.setContentAreaFilled(false);
        jBAgregarComida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBAgregarComida.setEnabled(false);
        jBAgregarComida.setOpaque(true);
        jBAgregarComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarComidaActionPerformed(evt);
            }
        });
        add(jBAgregarComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 130, 90, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void jBEliminarDietaComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarDietaComidaActionPerformed

    }//GEN-LAST:event_jBEliminarDietaComidaActionPerformed

    private void jBCrearDietaComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCrearDietaComidaActionPerformed

    }//GEN-LAST:event_jBCrearDietaComidaActionPerformed

    private void jComboBoxDietaComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDietaComidaActionPerformed
        if (this.jComboBoxDietaComida.getSelectedItem().getClass() != String.class) {
            Dieta d = (Dieta) jComboBoxDietaComida.getSelectedItem();
            List<DietaComida> comidas = DietaComidaData.buscarDietaComidaPorIdDieta(d.getIdDieta());
            cargarTabla(comidas);
        }
    }//GEN-LAST:event_jComboBoxDietaComidaActionPerformed

    private void jBAgregarComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarComidaActionPerformed

    }//GEN-LAST:event_jBAgregarComidaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAgregarComida;
    private javax.swing.JButton jBCrearDietaComida;
    private javax.swing.JButton jBEliminarDietaComida;
    private javax.swing.JComboBox<Object> jCBComidas;
    private javax.swing.JComboBox<Object> jComboBoxDietaComida;
    private javax.swing.JLabel jLTDietaComida;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDietaComida;
    // End of variables declaration//GEN-END:variables

    private void initTable() {

        this.tablita.addColumn("Codigo");
        this.tablita.addColumn("Comida");
        this.tablita.addColumn("PorciÃ³n");
        this.tablita.addColumn("Horario");

        this.jTableDietaComida.setModel(this.tablita);

        JTableHeader tableHeader = jTableDietaComida.getTableHeader();
        tableHeader.setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setPreferredSize(new Dimension(c.getWidth(), 40));
                c.setBackground(Color.GRAY);
                c.setForeground(Color.WHITE);
                return c;
            }
        });

        setCombo();
    }

    private void setCombo() {
        TableColumn column = this.jTableDietaComida.getColumnModel().getColumn(3);
        JComboBox<Horario> comboBox = new JComboBox();
        comboBox.addItem(Horario.DESAYUNO);
        comboBox.addItem(Horario.ALMUERZO);
        comboBox.addItem(Horario.MERIENDA);
        comboBox.addItem(Horario.CENA);
        comboBox.addItem(Horario.SNACK);

        column.setCellEditor(new DefaultCellEditor(comboBox));
        column.setCellRenderer(new DefaultTableCellRenderer());
    }

    public void iniciarComboDietas() {
        List<Dieta> listaDietita = DietaData.buscarDietas(Estado.ACTIVO);
        if (listaDietita.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay dietas disponibles");
            return;
        }
        cargarCombo(this.jComboBoxDietaComida, listaDietita);
        invertirEstado();
    }

    private void iniciarComboComida() {
        List<Comida> listaComidas = ComidaData.buscarComidas(Estado.ACTIVO);
        if (listaComidas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay comidas");
            return;
        }
        cargarCombo(this.jCBComidas, listaComidas);
    }

    private void cargarCombo(JComboBox<Object> comboBox, List<?> listita) {
        for (Object o : listita) {
            comboBox.addItem(o);
        }
    }

    public void invertirEstado() {
        this.jCBComidas.setEnabled(!jCBComidas.isEnabled());
        this.jBAgregarComida.setEnabled(!jBAgregarComida.isEnabled());
    }

    private void cargarTabla(List<DietaComida> listita) {
        if (listita == null) {
            JOptionPane.showMessageDialog(this, "No hay ninguna comida cargada en la dieta");
        } else if (listita.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay ninguna comida cargada en la dieta");
        } else {
            CargarComponente.borrarFilas(this.jTableDietaComida, this.tablita);
            for (DietaComida dietaComida : listita) {
                this.tablita.addRow(new Object[]{
                    dietaComida.getIdDietaComida(),
                    dietaComida.getComida().getNombre(),
                    dietaComida.getPorcion(),
                    dietaComida.getHorario()
                });
            }
        }
    }

}
