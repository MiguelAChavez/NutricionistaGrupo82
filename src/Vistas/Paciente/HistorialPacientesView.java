/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.Paciente;

import AccesoADatos.HistorialData;
import AccesoADatos.PacienteData;
import Entidades.Historial;
import Entidades.Paciente;
import java.awt.Color;
import java.awt.HeadlessException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utils.Estado;

/**
 *
 * @author alber
 */
public class HistorialPacientesView extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    private final DefaultTableModel MODEL = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int i, int i1) {
            switch (i1) {
                case 1:
                    if (i > 0) {
                        return Boolean.TRUE;
                    }else{
                        return Boolean.FALSE;
                    }
                default:
                    return Boolean.FALSE;
            }
        }
              
    };

    public HistorialPacientesView() {
        initComponents();
        initTableHistorial();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLTituloHistorial = new javax.swing.JLabel();
        jLNombre = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTTextoNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTHistorial = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTpesoIngreso = new javax.swing.JTextField();
        jTpesoDeseado = new javax.swing.JTextField();
        jBEditar = new javax.swing.JButton();
        jLNombre1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(35, 35, 35));
        setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        setMinimumSize(new java.awt.Dimension(780, 670));
        setPreferredSize(new java.awt.Dimension(1100, 670));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLTituloHistorial.setFont(new java.awt.Font("Dialog", 1, 39)); // NOI18N
        jLTituloHistorial.setForeground(new java.awt.Color(255, 255, 255));
        jLTituloHistorial.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLTituloHistorial.setText("Historial Pacientes");
        add(jLTituloHistorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 11, 1090, 64));

        jLNombre.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLNombre.setForeground(new java.awt.Color(255, 255, 255));
        jLNombre.setText("Primer registro");
        add(jLNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 110, 32));

        jSeparator1.setOpaque(true);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, 400, -1));

        jTTextoNombre.setBackground(new java.awt.Color(35, 35, 35));
        jTTextoNombre.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jTTextoNombre.setForeground(new java.awt.Color(255, 255, 255));
        jTTextoNombre.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        jTTextoNombre.setCaretColor(new java.awt.Color(0, 153, 255));
        jTTextoNombre.setSelectionColor(new java.awt.Color(153, 153, 153));
        jTTextoNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTTextoNombreFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTTextoNombreFocusLost(evt);
            }
        });
        jTTextoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTTextoNombreActionPerformed(evt);
            }
        });
        jTTextoNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTTextoNombreKeyReleased(evt);
            }
        });
        add(jTTextoNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 400, 40));

        jTHistorial.setBackground(new java.awt.Color(51, 51, 51));
        jTHistorial.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jTHistorial.setForeground(new java.awt.Color(255, 255, 255));
        jTHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jTHistorial.setGridColor(new java.awt.Color(0, 0, 0));
        jTHistorial.setRowHeight(40);
        jTHistorial.setSelectionBackground(new java.awt.Color(0, 153, 255));
        jTHistorial.getTableHeader().setResizingAllowed(false);
        jTHistorial.getTableHeader().setReorderingAllowed(false);
        jTHistorial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTHistorialFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTHistorial);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 403, 454));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Peso de Ingreso");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 200, -1, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Peso Deseado");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 310, 115, 20));

        jTpesoIngreso.setEditable(false);
        jTpesoIngreso.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTpesoIngreso.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        add(jTpesoIngreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 190, 90, 42));

        jTpesoDeseado.setEditable(false);
        jTpesoDeseado.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTpesoDeseado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        add(jTpesoDeseado, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 300, 90, 41));

        jBEditar.setBackground(new java.awt.Color(0, 204, 255));
        jBEditar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jBEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/boton-editar.png"))); // NOI18N
        jBEditar.setText("Editar Peso");
        jBEditar.setBorder(null);
        jBEditar.setBorderPainted(false);
        jBEditar.setContentAreaFilled(false);
        jBEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBEditar.setDisabledIcon(null);
        jBEditar.setOpaque(true);
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });
        add(jBEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 600, 110, 40));

        jLNombre1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLNombre1.setForeground(new java.awt.Color(255, 255, 255));
        jLNombre1.setText("Ingrese un apellido o un nombre: ");
        add(jLNombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 240, 32));
    }// </editor-fold>//GEN-END:initComponents

    private void jTTextoNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTTextoNombreFocusGained
        this.jTTextoNombre.setBackground(new Color(63, 63, 63));
    }//GEN-LAST:event_jTTextoNombreFocusGained

    private void jTTextoNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTTextoNombreFocusLost
        this.jTTextoNombre.setBackground(new Color(35, 35, 35));
    }//GEN-LAST:event_jTTextoNombreFocusLost

    private void jTTextoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTTextoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTTextoNombreActionPerformed

    private void jTTextoNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTTextoNombreKeyReleased
        borrarFilas();
        String texto = this.jTTextoNombre.getText();
        if (texto.isEmpty()) {
            borrarFilas();
        } else {
            List<Paciente> pacientes = PacienteData.ListarPorNombreOApellido(texto, Estado.TODOS);
            if (!pacientes.isEmpty()) {

                Paciente p = pacientes.get(0);
                List<Historial> listHistorial = HistorialData.getHistorialPaciente(p.getIdPaciente());
                if (!listHistorial.isEmpty()) {
                    for (Historial historial : listHistorial) {
                        this.MODEL.addRow(new Object[]{
                            historial.getIdHistorial(),
                            historial.getPeso(),
                            historial.getFechaRegistro()
                        });
                    }
                    this.jTpesoIngreso.setText(listHistorial.get(0).getPeso() + "");
                    this.jTpesoDeseado.setText(p.getPesoDeseado() + "");
                }
            }
        }

    }//GEN-LAST:event_jTTextoNombreKeyReleased

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed

        int[] filas = jTHistorial.getSelectedRows();

        if (filas.length > 0) {
            try {
                for (int i = 0; i < filas.length; i++) {

                    int idHistorial = Integer.parseInt(jTHistorial.getValueAt(filas[i], 0).toString());
                    double peso = Double.parseDouble(jTHistorial.getValueAt(filas[i], 1).toString());

                    if (peso < 0.0) {
                        JOptionPane.showMessageDialog(this, "ingrese un valor valido mayor a 0 para la fila " + (filas[i] + 1));
                        break;
                    }

                    HistorialData.modificarHistorial(new Historial(idHistorial, peso));

                }

            } catch (NumberFormatException e) {
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(this, "solo puede ingresar numeros");
            } catch (HeadlessException e) {
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione el peso a modificar");
        }

    }//GEN-LAST:event_jBEditarActionPerformed

    private void jTHistorialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTHistorialFocusGained

    }//GEN-LAST:event_jTHistorialFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBEditar;
    private javax.swing.JLabel jLNombre;
    private javax.swing.JLabel jLNombre1;
    private javax.swing.JLabel jLTituloHistorial;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTHistorial;
    private javax.swing.JTextField jTTextoNombre;
    private javax.swing.JTextField jTpesoDeseado;
    private javax.swing.JTextField jTpesoIngreso;
    // End of variables declaration//GEN-END:variables

    private void initTableHistorial() {
        this.MODEL.addColumn("Codigo");
        this.MODEL.addColumn("Peso");
        this.MODEL.addColumn("Fecha de Registro");

        this.jTHistorial.setModel(MODEL);
    }

    private void borrarFilas() {
        int filas = jTHistorial.getRowCount() - 1;
        for (int f = filas; f >= 0; f--) {
            MODEL.removeRow(f);
        }

    }

}
