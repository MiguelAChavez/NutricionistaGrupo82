/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.Paciente;

import AccesoADatos.PacienteData;
import Entidades.Paciente;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import utils.Estado;
import utils.Validacion;

/**
 *
 * @author Pc Chavez
 */
public class ListarPacientes extends javax.swing.JPanel {

    /**
     * Creates new form ListarPacientes
     */
    private final DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int i, int i1) {
            return Boolean.FALSE;
        }
    };

    private Paciente mipaciente;
    private int cont = 0;

    public ListarPacientes() {
        initComponents();
        initTable();
        armarCombo();
        cont++;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCBSelecionFiltro = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTPacientes = new javax.swing.JTable();
        jTTexto = new javax.swing.JTextField();
        jLTitulo = new javax.swing.JLabel();
        jLTexto = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLFiltro1 = new javax.swing.JLabel();
        jLCantidad = new javax.swing.JLabel();
        jTCant = new javax.swing.JTextField();

        setBackground(new java.awt.Color(35, 35, 35));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCBSelecionFiltro.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jCBSelecionFiltro.setBorder(null);
        jCBSelecionFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBSelecionFiltroActionPerformed(evt);
            }
        });
        add(jCBSelecionFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 140, 140, 40));

        jTPacientes.setBackground(new java.awt.Color(51, 51, 51));
        jTPacientes.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTPacientes.setForeground(new java.awt.Color(255, 255, 255));
        jTPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ));
        jTPacientes.setGridColor(new java.awt.Color(0, 0, 0));
        jTPacientes.setRowHeight(40);
        jTPacientes.setSelectionBackground(new java.awt.Color(30, 150, 117));
        jTPacientes.setShowVerticalLines(false);
        jTPacientes.getTableHeader().setReorderingAllowed(false);
        JTableHeader theader = jTPacientes.getTableHeader();
        theader.setBackground(Color.red);
        theader.setForeground(new Color(13,13,13));
        theader.setFont(new java.awt.Font("Roboto", Font.BOLD, 16));
        jScrollPane1.setViewportView(jTPacientes);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 970, 450));

        jTTexto.setBackground(new java.awt.Color(35, 35, 35));
        jTTexto.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jTTexto.setForeground(new java.awt.Color(255, 255, 255));
        jTTexto.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(2, 15, 2, 15), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        jTTexto.setCaretColor(new java.awt.Color(0, 153, 255));
        jTTexto.setSelectionColor(new java.awt.Color(153, 153, 153));
        jTTexto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTTextoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTTextoFocusLost(evt);
            }
        });
        jTTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTTextoActionPerformed(evt);
            }
        });
        jTTexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTTextoKeyReleased(evt);
            }
        });
        add(jTTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 480, 40));

        jLTitulo.setFont(new java.awt.Font("Roboto", 1, 39)); // NOI18N
        jLTitulo.setForeground(new java.awt.Color(255, 255, 255));
        jLTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLTitulo.setText("Tabla pacientes");
        add(jLTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1030, 50));

        jLTexto.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLTexto.setForeground(new java.awt.Color(255, 255, 255));
        jLTexto.setText("Ingrese un apellido o un nombre: ");
        add(jLTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 240, 40));

        jSeparator1.setOpaque(true);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 480, 3));

        jLFiltro1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLFiltro1.setForeground(new java.awt.Color(255, 255, 255));
        jLFiltro1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLFiltro1.setText("Filtro");
        jLFiltro1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        add(jLFiltro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 120, 70, 20));

        jLCantidad.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLCantidad.setForeground(new java.awt.Color(255, 255, 255));
        jLCantidad.setText("Cantidad:  ");
        add(jLCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 640, 90, 30));

        jTCant.setEditable(false);
        jTCant.setBackground(new java.awt.Color(35, 35, 35));
        jTCant.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jTCant.setForeground(new java.awt.Color(248, 245, 150));
        jTCant.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTCant.setBorder(null);
        jTCant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTCantActionPerformed(evt);
            }
        });
        add(jTCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 640, 40, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void jTTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTTextoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTTextoActionPerformed

    private void jTTextoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTTextoFocusGained
        this.jTTexto.setBackground(new Color(63, 63, 63));
    }//GEN-LAST:event_jTTextoFocusGained

    private void jTTextoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTTextoFocusLost
        this.jTTexto.setBackground(new Color(35, 35, 35));
    }//GEN-LAST:event_jTTextoFocusLost

    private void jCBSelecionFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBSelecionFiltroActionPerformed
        borrarFilas();
        if (this.jCBSelecionFiltro.getSelectedItem().getClass() != String.class && cont != 0) {
            Estado estado = (Estado) jCBSelecionFiltro.getSelectedItem();
            List<Paciente> ListaPaciente = new ArrayList<>();
            String texto = this.jTTexto.getText().trim();

            if (texto.isEmpty()) {
                ListaPaciente = PacienteData.ListarPacientes(estado);
                if (ListaPaciente.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "No hay pacientes regristados");
                    this.jTCant.setText("0");
                    return;
                }

            } else if (Validacion.isValidoString(texto)) {
                ListaPaciente = PacienteData.ListarPorNombreOApellido(texto, estado);
               
                if (ListaPaciente.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "No hay pacientes regristados");
                    this.jTCant.setText("0");
                    return;
                }
            }

            this.jTCant.setText(ListaPaciente.size() + "");
            for (Paciente paciente : ListaPaciente) {
                model.addRow(new Object[]{
                    paciente.getIdPaciente(),
                    paciente.getApellido(),
                    paciente.getNombre(),
                    paciente.getDni(),
                    paciente.getTelefono(),
                    paciente.getDomicilio(),
                    paciente.getFechaNac(),
                    paciente.getSexo(),
                    (paciente.isEstado()) ? "Activos" : "Inactivos",
                    paciente.getAltura()
                });
            }
        }
    }//GEN-LAST:event_jCBSelecionFiltroActionPerformed

    private void jTTextoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTTextoKeyReleased
        borrarFilas();
        String texto = this.jTTexto.getText().trim();
        Estado estado = (Estado) jCBSelecionFiltro.getSelectedItem();
        if (texto.isEmpty()) {
            borrarFilas();
            this.jTCant.setText("0");
        } else {
            if (Validacion.isValidoString(texto)) {
                List<Paciente> listaPaciente = PacienteData.ListarPorNombreOApellido(texto, estado);
                this.jTCant.setText(listaPaciente.size() + "");

                for (Paciente paciente : listaPaciente) {
                    model.addRow(new Object[]{paciente.getIdPaciente(),
                        paciente.getApellido(),
                        paciente.getNombre(),
                        paciente.getDni(),
                        paciente.getTelefono(),
                        paciente.getDomicilio(),
                        paciente.getFechaNac(),
                        paciente.getSexo(),
                        (paciente.isEstado()) ? "Activo" : "Inactivo",
                        paciente.getAltura()});

                }
            }
        }
    }//GEN-LAST:event_jTTextoKeyReleased

    private void jTCantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTCantActionPerformed

    }//GEN-LAST:event_jTCantActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Estado> jCBSelecionFiltro;
    private javax.swing.JLabel jLCantidad;
    private javax.swing.JLabel jLFiltro1;
    private javax.swing.JLabel jLTexto;
    private javax.swing.JLabel jLTitulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTCant;
    private javax.swing.JTable jTPacientes;
    private javax.swing.JTextField jTTexto;
    // End of variables declaration//GEN-END:variables

    private void initTable() {

        this.model.addColumn("idPaciente");
        this.model.addColumn("Apellido");
        this.model.addColumn("Nombre");
        this.model.addColumn("Dni");
        this.model.addColumn("Teléfono");
        this.model.addColumn("Domicilio");
        this.model.addColumn("Nacimiento");
        this.model.addColumn("Sexo");
        this.model.addColumn("Estado");
        this.model.addColumn("Altura");

        this.jTPacientes.setModel(model);
        JTableHeader tableHeader = jTPacientes.getTableHeader();
        tableHeader.setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setPreferredSize(new Dimension(c.getWidth(), 40));
                c.setBackground(Color.GRAY); 
                c.setForeground(Color.WHITE);
                return c;
            }
        });

    }

    private void armarCombo() {
        this.jCBSelecionFiltro.removeAll();
        this.jCBSelecionFiltro.addItem(Estado.TODOS);
        this.jCBSelecionFiltro.addItem(Estado.ACTIVO);
        this.jCBSelecionFiltro.addItem(Estado.INACTIVOS);
        this.jCBSelecionFiltro.addItem(Estado.DIETA_VIGENTE);
        this.jCBSelecionFiltro.addItem(Estado.DIETA_CULMINADA);
        this.jCBSelecionFiltro.setSelectedIndex(0);
    }

    private void borrarFilas() {
        int filas = jTPacientes.getRowCount() - 1;
        for (int f = filas; f >= 0; f--) {
            model.removeRow(f);
        }

    }
}
